// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: postInfo.proto

package postinfo

import (
	"context"

	"go-zero_less/postcenter/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ExecRows                   = pb.ExecRows
	PostInfoBase               = pb.PostInfoBase
	PostInfoCountRequest       = pb.PostInfoCountRequest
	PostInfoCountResponse      = pb.PostInfoCountResponse
	PostInfoCreateRequest      = pb.PostInfoCreateRequest
	PostInfoDeleteResponse     = pb.PostInfoDeleteResponse
	PostInfoDetail             = pb.PostInfoDetail
	PostInfoDetailWithComments = pb.PostInfoDetailWithComments
	PostInfoId                 = pb.PostInfoId
	PostInfoList               = pb.PostInfoList
	PostInfoListPage           = pb.PostInfoListPage
	PostInfoUpdateRequest      = pb.PostInfoUpdateRequest
	PostSearchRequest          = pb.PostSearchRequest

	PostInfo interface {
		GetPostListPage(ctx context.Context, in *PostSearchRequest, opts ...grpc.CallOption) (*PostInfoListPage, error)
		GetPostDetail(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDetailWithComments, error)
		CreatePost(ctx context.Context, in *PostInfoCreateRequest, opts ...grpc.CallOption) (*PostInfoId, error)
		DeletePost(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDeleteResponse, error)
		UpdatePost(ctx context.Context, in *PostInfoBase, opts ...grpc.CallOption) (*ExecRows, error)
	}

	defaultPostInfo struct {
		cli zrpc.Client
	}
)

func NewPostInfo(cli zrpc.Client) PostInfo {
	return &defaultPostInfo{
		cli: cli,
	}
}

func (m *defaultPostInfo) GetPostListPage(ctx context.Context, in *PostSearchRequest, opts ...grpc.CallOption) (*PostInfoListPage, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetPostListPage(ctx, in, opts...)
}

func (m *defaultPostInfo) GetPostDetail(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDetailWithComments, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetPostDetail(ctx, in, opts...)
}

func (m *defaultPostInfo) CreatePost(ctx context.Context, in *PostInfoCreateRequest, opts ...grpc.CallOption) (*PostInfoId, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultPostInfo) DeletePost(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDeleteResponse, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}

func (m *defaultPostInfo) UpdatePost(ctx context.Context, in *PostInfoBase, opts ...grpc.CallOption) (*ExecRows, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.UpdatePost(ctx, in, opts...)
}
