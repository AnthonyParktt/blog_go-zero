// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: postInfo.proto

package postinfo

import (
	"context"

	"go-zero_less/postcenter/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommentPostId              = pb.CommentPostId
	CommentsInfoBase           = pb.CommentsInfoBase
	CommentsInfoCreateRequest  = pb.CommentsInfoCreateRequest
	CommentsInfoDeleteRequest  = pb.CommentsInfoDeleteRequest
	CommentsInfoDeleteResponse = pb.CommentsInfoDeleteResponse
	CommentsInfoDetail         = pb.CommentsInfoDetail
	CommentsInfoId             = pb.CommentsInfoId
	CommentsInfoList           = pb.CommentsInfoList
	CommentsInfoListPage       = pb.CommentsInfoListPage
	ExecRows                   = pb.ExecRows
	PostInfoBase               = pb.PostInfoBase
	PostInfoCountRequest       = pb.PostInfoCountRequest
	PostInfoCountResponse      = pb.PostInfoCountResponse
	PostInfoCreateRequest      = pb.PostInfoCreateRequest
	PostInfoDeleteResponse     = pb.PostInfoDeleteResponse
	PostInfoDetail             = pb.PostInfoDetail
	PostInfoDetailWithComments = pb.PostInfoDetailWithComments
	PostInfoId                 = pb.PostInfoId
	PostInfoList               = pb.PostInfoList
	PostInfoListPage           = pb.PostInfoListPage
	PostInfoUpdateRequest      = pb.PostInfoUpdateRequest
	PostSearchRequest          = pb.PostSearchRequest
	UserInfoId                 = pb.UserInfoId

	PostInfo interface {
		GetPostListPage(ctx context.Context, in *PostSearchRequest, opts ...grpc.CallOption) (*PostInfoListPage, error)
		GetPostDetail(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDetailWithComments, error)
		CreatePost(ctx context.Context, in *PostInfoCreateRequest, opts ...grpc.CallOption) (*PostInfoId, error)
		DeletePost(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDeleteResponse, error)
		UpdatePost(ctx context.Context, in *PostInfoBase, opts ...grpc.CallOption) (*ExecRows, error)
		GetCommentsInfoListPage(ctx context.Context, in *CommentPostId, opts ...grpc.CallOption) (*CommentsInfoListPage, error)
		GetCommentsInfoDetail(ctx context.Context, in *CommentsInfoId, opts ...grpc.CallOption) (*CommentsInfoDetail, error)
		CreateCommentsInfo(ctx context.Context, in *CommentsInfoCreateRequest, opts ...grpc.CallOption) (*CommentsInfoId, error)
		DeleteCommentsInfo(ctx context.Context, in *CommentsInfoId, opts ...grpc.CallOption) (*CommentsInfoDeleteResponse, error)
	}

	defaultPostInfo struct {
		cli zrpc.Client
	}
)

func NewPostInfo(cli zrpc.Client) PostInfo {
	return &defaultPostInfo{
		cli: cli,
	}
}

func (m *defaultPostInfo) GetPostListPage(ctx context.Context, in *PostSearchRequest, opts ...grpc.CallOption) (*PostInfoListPage, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetPostListPage(ctx, in, opts...)
}

func (m *defaultPostInfo) GetPostDetail(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDetailWithComments, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetPostDetail(ctx, in, opts...)
}

func (m *defaultPostInfo) CreatePost(ctx context.Context, in *PostInfoCreateRequest, opts ...grpc.CallOption) (*PostInfoId, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultPostInfo) DeletePost(ctx context.Context, in *PostInfoId, opts ...grpc.CallOption) (*PostInfoDeleteResponse, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}

func (m *defaultPostInfo) UpdatePost(ctx context.Context, in *PostInfoBase, opts ...grpc.CallOption) (*ExecRows, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.UpdatePost(ctx, in, opts...)
}

func (m *defaultPostInfo) GetCommentsInfoListPage(ctx context.Context, in *CommentPostId, opts ...grpc.CallOption) (*CommentsInfoListPage, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetCommentsInfoListPage(ctx, in, opts...)
}

func (m *defaultPostInfo) GetCommentsInfoDetail(ctx context.Context, in *CommentsInfoId, opts ...grpc.CallOption) (*CommentsInfoDetail, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.GetCommentsInfoDetail(ctx, in, opts...)
}

func (m *defaultPostInfo) CreateCommentsInfo(ctx context.Context, in *CommentsInfoCreateRequest, opts ...grpc.CallOption) (*CommentsInfoId, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.CreateCommentsInfo(ctx, in, opts...)
}

func (m *defaultPostInfo) DeleteCommentsInfo(ctx context.Context, in *CommentsInfoId, opts ...grpc.CallOption) (*CommentsInfoDeleteResponse, error) {
	client := pb.NewPostInfoClient(m.cli.Conn())
	return client.DeleteCommentsInfo(ctx, in, opts...)
}
