// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: postInfo.proto

package server

import (
	"context"

	"go-zero_less/postcenter/cmd/rpc/internal/logic"
	"go-zero_less/postcenter/cmd/rpc/internal/svc"
	"go-zero_less/postcenter/cmd/rpc/pb"
)

type PostInfoServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedPostInfoServer
}

func NewPostInfoServer(svcCtx *svc.ServiceContext) *PostInfoServer {
	return &PostInfoServer{
		svcCtx: svcCtx,
	}
}

func (s *PostInfoServer) GetPostListPage(ctx context.Context, in *pb.PostSearchRequest) (*pb.PostInfoListPage, error) {
	l := logic.NewGetPostListPageLogic(ctx, s.svcCtx)
	return l.GetPostListPage(in)
}

func (s *PostInfoServer) GetPostDetail(ctx context.Context, in *pb.PostInfoId) (*pb.PostInfoDetailWithComments, error) {
	l := logic.NewGetPostDetailLogic(ctx, s.svcCtx)
	return l.GetPostDetail(in)
}

func (s *PostInfoServer) CreatePost(ctx context.Context, in *pb.PostInfoCreateRequest) (*pb.PostInfoId, error) {
	l := logic.NewCreatePostLogic(ctx, s.svcCtx)
	return l.CreatePost(in)
}

func (s *PostInfoServer) DeletePost(ctx context.Context, in *pb.PostInfoId) (*pb.PostInfoDeleteResponse, error) {
	l := logic.NewDeletePostLogic(ctx, s.svcCtx)
	return l.DeletePost(in)
}

func (s *PostInfoServer) UpdatePost(ctx context.Context, in *pb.PostInfoBase) (*pb.ExecRows, error) {
	l := logic.NewUpdatePostLogic(ctx, s.svcCtx)
	return l.UpdatePost(in)
}

func (s *PostInfoServer) GetCommentsInfoListPage(ctx context.Context, in *pb.CommentPostId) (*pb.CommentsInfoListPage, error) {
	l := logic.NewGetCommentsInfoListPageLogic(ctx, s.svcCtx)
	return l.GetCommentsInfoListPage(in)
}

func (s *PostInfoServer) GetCommentsInfoDetail(ctx context.Context, in *pb.CommentsInfoId) (*pb.CommentsInfoDetail, error) {
	l := logic.NewGetCommentsInfoDetailLogic(ctx, s.svcCtx)
	return l.GetCommentsInfoDetail(in)
}

func (s *PostInfoServer) CreateCommentsInfo(ctx context.Context, in *pb.CommentsInfoCreateRequest) (*pb.CommentsInfoId, error) {
	l := logic.NewCreateCommentsInfoLogic(ctx, s.svcCtx)
	return l.CreateCommentsInfo(in)
}

func (s *PostInfoServer) DeleteCommentsInfo(ctx context.Context, in *pb.CommentsInfoId) (*pb.CommentsInfoDeleteResponse, error) {
	l := logic.NewDeleteCommentsInfoLogic(ctx, s.svcCtx)
	return l.DeleteCommentsInfo(in)
}
